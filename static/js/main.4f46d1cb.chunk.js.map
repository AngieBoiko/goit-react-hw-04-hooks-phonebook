{"version":3,"sources":["components/Contacts/Contacts.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App.js","components/Hooks/useLocalStorage.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["Contacts","contactsItem","onClick","handleClick","id","className","s","contactsList","map","item","contactsText","name","number","contactsBtn","type","Form","onSubmit","useState","setName","setNumber","handleInput","event","currentTarget","value","reset","preventDefault","uuidv4","form","formLabel","formInput","onChange","pattern","title","required","formBtn","Filter","filterWrapper","filterLabel","filterInput","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getContacts","data","alert","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4f46d1cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction Contacts({ contactsItem, onClick }) {\r\n  const handleClick = id => {\r\n    onClick(id);\r\n  };\r\n\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {contactsItem.map(item => (\r\n        <li key={item.id} className={s.contactsItem}>\r\n          <p className={s.contactsText}>\r\n            {item.name}: {item.number}\r\n          </p>\r\n          <button\r\n            className={s.contactsBtn}\r\n            type=\"button\"\r\n            onClick={() => handleClick(item.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\nContacts.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  contactsItem: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInput = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else if (name === 'number') {\r\n      setNumber(value);\r\n    }\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onSubmit({\r\n      name,\r\n      id: uuidv4(),\r\n      number,\r\n    });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          value={name}\r\n          onChange={handleInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          value={number}\r\n          onChange={handleInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        Add to contacts\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default Form;\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={onChange}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport useLocalStorage from './components/Hooks/useLocalStorage';\r\nimport Contacts from './components/Contacts';\r\nimport Form from './components/Form';\r\nimport Filter from './components/Filter';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage('Contacts', []);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const handleInput = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === 'filter') {\r\n      setFilter(value);\r\n    }\r\n  };\r\n  const forSubmitHandler = data => {\r\n    const nameArray = contacts.map(item => {\r\n      return item.name;\r\n    });\r\n    if (nameArray.includes(data.name)) {\r\n      window.alert(`${data.name} is already in contacts.`);\r\n    } else {\r\n      setContacts(state => [...state, data]);\r\n    }\r\n  };\r\n\r\n  const getContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n  const deleteContact = id => {\r\n    setContacts(state => state.filter(item => item.id !== id));\r\n  };\r\n\r\n  const visibleContacts = getContacts();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Form onSubmit={forSubmitHandler}></Form>\r\n      <h2>Contacts</h2>\r\n      <Filter onChange={handleInput} value={filter}></Filter>\r\n      <Contacts\r\n        contactsItem={visibleContacts}\r\n        onClick={deleteContact}\r\n      ></Contacts>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2SH9g\",\"formLabel\":\"Form_formLabel__3jH1N\",\"formInput\":\"Form_formInput__2zz91\",\"formBtn\":\"Form_formBtn__2gZBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"Contacts_contactsItem__2gSNS\",\"contactsText\":\"Contacts_contactsText__1xD6_\",\"contactsBtn\":\"Contacts_contactsBtn__pI8Fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3Kp9h\",\"filterLabel\":\"Filter_filterLabel__3E5Zo\",\"filterInput\":\"Filter_filterInput__1ZoBI\"};"],"sourceRoot":""}